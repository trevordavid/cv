# name: Update CV Metrics and Generate PDF

# on:
#   schedule:
#     - cron: "0 0 * * *"  # Runs daily at midnight UTC
#   workflow_dispatch:  # Allows manual trigger

# permissions:
#   contents: write  # Allows pushing changes to the repository

# jobs:
#   update-cv:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4  # Updated to latest version

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.9"

#       - name: Install dependencies
#         run: pip install -r requirements.txt

#       - name: Install missing dependencies
#         run: pip install ads

#       - name: Run update script to fetch metrics
#         env:
#           ADS_API_KEY: ${{ secrets.ADS_API_KEY }}
#         run: python update_metrics.py

#       # - name: Update CV with new metrics
#       #   run: python update_cv.py  # Updates cv.tex with latest citation data

#       - name: Install LaTeX (with XeLaTeX support)
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y texlive-xetex texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

#       - name: Create Private Info File
#         env:
#           EMAIL: ${{ secrets.EMAIL }}
#           PHONE: ${{ secrets.PHONE }}
#         run: |
#             echo '\newcommand{\myPhone}{'"$PHONE"'}' > sections/private_info.tex
#             echo '\newcommand{\myEmail}{'"$EMAIL"'}' >> sections/private_info.tex
    
#       - name: Compile LaTeX CV
#         run: |
#           xelatex cv.tex
#           bibtex cv || true  # Run only if bibliography is present
#           xelatex cv.tex
#           xelatex cv.tex  # Run again for proper cross-referencing
#           rm -f *.aux *.log *.out *.bbl *.blg *.toc *.lof *.lot  # Cleanup temp files

#       - name: Upload CV PDF as Artifact
#         if: ${{ env.ACT != 'true' }}
#         uses: actions/upload-artifact@v4
#         with:
#           name: cv-pdf
#           path: cv.pdf

#       - name: Check Repository Permissions
#         env:
#           GH_PAT: ${{ secrets.GH_PAT }}
#         run: |
#           curl -H "Authorization: token ${GH_PAT}" \
#           -H "Accept: application/vnd.github.v3+json" \
#           https://api.github.com/repos/trevordavid/cv

#       - name: Debug Git Remote URL
#         run: git remote -v

#       - name: Configure Git Remote with Authentication
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/trevordavid/cv.git
#           git remote -v  # Verify the remote URL

#       - name: Commit and push if changed
#         run: |
#           git config --global user.name "GitHub Actions"
#           git config --global user.email "actions@github.com"
#           git add cv.pdf 
#           git commit -m "Updated CV metrics and regenerated CV PDF" || exit 0
#           git push origin main

name: Update CV Metrics and Generate PDF

on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write  # Allows pushing changes to the repository

jobs:
  update-cv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full commit history for rebase

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install missing dependencies
        run: pip install ads

      - name: Run update script to fetch metrics
        env:
          ADS_API_KEY: ${{ secrets.ADS_API_KEY }}
        run: python update_metrics.py

      - name: Install LaTeX (with XeLaTeX support)
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-xetex texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

      - name: Create Private Info File
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PHONE: ${{ secrets.PHONE }}
        run: |
          echo '\newcommand{\myPhone}{'"$PHONE"'}' > sections/private_info.tex
          echo '\newcommand{\myEmail}{'"$EMAIL"'}' >> sections/private_info.tex
    
      - name: Compile LaTeX CV
        run: |
          xelatex cv.tex
          bibtex cv || true  # Run only if bibliography is present
          xelatex cv.tex
          xelatex cv.tex  # Run again for proper cross-referencing
          rm -f *.aux *.log *.out *.bbl *.blg *.toc *.lof *.lot  # Cleanup temp files

      - name: Upload CV PDF as Artifact
        if: ${{ env.ACT != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: cv-pdf
          path: cv.pdf

      - name: Check Repository Permissions
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          curl -H "Authorization: token ${GH_PAT}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/trevordavid/cv

      - name: Debug Git Remote URL
        run: git remote -v

      - name: Configure Git Remote with Authentication
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/trevordavid/cv.git
          git remote -v  # Verify the remote URL

      - name: Commit and push if changed
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git fetch origin main  # Fetch latest changes
          git reset origin/main  # Sync with remote without overwriting local changes

          git add cv.pdf
          git commit -m "Updated CV metrics and regenerated CV PDF" || echo "No changes to commit"

          git pull --rebase origin main  # Pull latest changes and reapply commits
          git push origin main
